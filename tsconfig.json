// Base TS config file for all other TS configs in repo.
{
  "compilerOptions": {
    "module": "es2022",
    "moduleResolution": "node",
    "lib": [
      "ES2022",
      // Notice: we only reference DOM in order to get around the fact that node-fetch 3.2.10 is not compilable without it:
      // https://github.com/node-fetch/node-fetch/issues/1657
      // If we downgrade to 3.2.8, then it has vulnerability (not a big issue as it is only dev dep), and its "Headers" are lacking "entries" iterator.
      // If we add it via module augmentation, that augmentation ends up in .d.ts files, which is undesireable.
      // Node 18 has fetch of its own, however, no types for it exist yet: https://github.com/DefinitelyTyped/DefinitelyTyped/issues/60924
      // Version 3.2.8 has vulnerability, but it is only ever used in tests as dev dependency anyway
      // https://github.com/node-fetch/node-fetch/issues/1617#issuecomment-1228259911
      "DOM",
      "DOM.Iterable"
    ],
    "target": "ES2022",
    "esModuleInterop": true,
    // No code minimization/uglification is happening, thus preserving source maps does not bring much value.
    // Furthermore, because .js and .mjs files will reside in the same directory, there will be a little hassle on the mapping file names + their refs in source.
    "sourceMap": false,
    "strict": true,
    "exactOptionalPropertyTypes": true,
    // We export whole src folder, so no need to include declaration files to dist folder.
    "declaration": false,
    "noErrorTruncation": true,
    "incremental": true,
  },
  "ts-node": {
    "esm": true,
    "experimentalSpecifierResolution": "node"
  },
}